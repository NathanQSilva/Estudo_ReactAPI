{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nathan-silva/Documentos/Repositorios/Estudo_ReactAPI/zabbixapi/src/pages/_app.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const {\n    0: location,\n    1: setLocation\n  } = useState(false);\n  const {\n    0: weather,\n    1: setWeather\n  } = useState(false);\n\n  let getWeather = async (lat, long) => {\n    let res = await axios.post(\"https://zabbix.plss.com.br\", {\n      method: 'post'\n    });\n    setWeather(res.data);\n    console.log(res.data);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true);\n    });\n  }, []);\n\n  if (location == false) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Voc\\xEA precisa habilitar a localiza\\xE7\\xE3o no browser o/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  } else if (weather == false) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Carregando o clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Cliema nas suas coordenadas (\", weather['weather'][0]['description'], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperatura atual: \", weather['main']['temp'], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperatura maxima: \", weather['main']['temp_max'], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperatura minima: \", weather['main']['temp_min'], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Press\\xE3o: \", weather['main']['pressure'], \"\\xB0 hpa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Umidade: \", weather['main']['humidity'], \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nathan-silva/Documentos/Repositorios/Estudo_ReactAPI/zabbixapi/src/pages/_app.jsx"],"names":["React","Fragment","useState","useEffect","axios","App","location","setLocation","weather","setWeather","getWeather","lat","long","res","post","method","data","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAEX,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AAEA,MAAIQ,UAAU,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAClC,QAAIC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,4BAAX,EAAyC;AACrDC,MAAAA,MAAM,EAAE;AAD6C,KAAzC,CAAhB;AAIAN,IAAAA,UAAU,CAACI,GAAG,CAACG,IAAL,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;AACH,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDZ,MAAAA,UAAU,CAACY,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,EAA2BF,QAAQ,CAACC,MAAT,CAAgBE,SAA3C,CAAV;AACAlB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,QAAQ,IAAI,KAAhB,EAAuB;AACnB,wBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOK,IAAIE,OAAO,IAAI,KAAf,EAAsB;AACvB,wBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANI,MAOA;AACD,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA,oDAAkCA,OAAO,CAAC,SAAD,CAAP,CAAmB,CAAnB,EAAsB,aAAtB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACI;AAAA,4CAAwBA,OAAO,CAAC,MAAD,CAAP,CAAgB,MAAhB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,6CAAyBA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,6CAAyBA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,qCAAcA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,kCAAcA,OAAO,CAAC,MAAD,CAAP,CAAgB,UAAhB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;AAEJ;;AAED,eAAeH,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n    const [location, setLocation] = useState(false);\n    const [weather, setWeather] = useState(false);\n\n    let getWeather = async (lat, long) => {\n        let res = await axios.post(\"https://zabbix.plss.com.br\", {\n            method: 'post',\n            \n        });\n        setWeather(res.data)\n        console.log(res.data)\n    }\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            getWeather(position.coords.latitude, position.coords.longitude);\n            setLocation(true)\n        })\n    }, [])\n\n    if (location == false) {\n        return (\n            <Fragment>\n                Você precisa habilitar a localização no browser o/\n            </Fragment>\n        )\n    }\n    else if (weather == false) {\n        return (\n            <Fragment>\n                Carregando o clima\n            </Fragment>\n        )\n    }\n    else {\n        return (\n            <Fragment>\n                <h3>Cliema nas suas coordenadas ({weather['weather'][0]['description']})</h3>\n                <hr />\n                <ul>\n                    <li>Temperatura atual: {weather['main']['temp']}°</li>\n                    <li>Temperatura maxima: {weather['main']['temp_max']}°</li>\n                    <li>Temperatura minima: {weather['main']['temp_min']}°</li>\n                    <li>Pressão: {weather['main']['pressure']}° hpa</li>\n                    <li>Umidade: {weather['main']['humidity']}%</li>\n                </ul>\n                <hr />\n            </Fragment>\n        );\n    }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}