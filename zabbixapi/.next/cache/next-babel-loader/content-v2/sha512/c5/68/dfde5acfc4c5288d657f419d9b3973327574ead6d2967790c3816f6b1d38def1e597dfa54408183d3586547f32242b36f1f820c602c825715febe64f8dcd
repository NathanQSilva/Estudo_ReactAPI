{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nathan-silva/Documentos/Repositorios/Estudo_ReactAPI/weather-location/src/pages/_app.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const {\n    0: location,\n    1: setLocation\n  } = useState(false);\n  const {\n    0: weather,\n    1: setWeather\n  } = useState(false);\n\n  let getWeather = async (lat, long) => {\n    let res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n      params: {\n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }\n    });\n    setWeather(res.data);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      getWeather();\n      setLocation(true);\n    });\n  }, []);\n\n  if (location == false) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Voc\\xEA precisa habilitar a localiza\\xE7\\xE3o no browser o/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cliema nas suas coordenadas (Exemplo)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Temperatura atual: x\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Temperatura maxima: x\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Temperatura minima: x\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Press\\xE3o: x\\xB0 hpa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Umidade: x%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nathan-silva/Documentos/Repositorios/Estudo_ReactAPI/weather-location/src/pages/_app.jsx"],"names":["React","Fragment","useState","useEffect","axios","App","location","setLocation","weather","setWeather","getWeather","lat","long","res","get","params","lon","appid","process","env","REACT_APP_OPEN_WHEATHER_KEY","lang","units","data","navigator","geolocation","getCurrentPosition","position"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAgB;AAEZ,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AAEA,MAAIQ,UAAU,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAClC,QAAIC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,gDAAV,EAA4D;AACxEC,MAAAA,MAAM,EAAE;AACJJ,QAAAA,GAAG,EAAEA,GADD;AAEJK,QAAAA,GAAG,EAAEJ,IAFD;AAGJK,QAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,2BAHf;AAIJC,QAAAA,IAAI,EAAE,IAJF;AAKJC,QAAAA,KAAK,EAAE;AALH;AADgE,KAA5D,CAAhB;AASAb,IAAAA,UAAU,CAACI,GAAG,CAACU,IAAL,CAAV;AACH,GAXD;;AAaApB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDjB,MAAAA,UAAU;AACVH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,QAAQ,IAAI,KAAhB,EAAwB;AACpB,wBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIE,GALN,MAMK;AACD,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;AAEJ;;AAED,eAAeD,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App () {\n\n    const [location, setLocation] = useState(false);\n    const [weather, setWeather] = useState(false);\n\n    let getWeather = async (lat, long) => {\n        let res = await axios.get(\"http://api.openweathermap.org/data/2.5/weather\", {\n            params: {\n                lat: lat,\n                lon: long,\n                appid: process.env.REACT_APP_OPEN_WHEATHER_KEY,\n                lang: 'pt',\n                units: 'metric'\n            }\n        });\n        setWeather(res.data)\n    }\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            getWeather();\n            setLocation(true)\n        })\n    }, [])\n\n    if (location == false ) {\n        return (\n            <Fragment>\n                Você precisa habilitar a localização no browser o/\n            </Fragment>\n        )}\n    else {\n        return (\n            <Fragment>\n                <h3>Cliema nas suas coordenadas (Exemplo)</h3>\n                <hr/>\n                <ul>\n                    <li>Temperatura atual: x°</li>\n                    <li>Temperatura maxima: x°</li>\n                    <li>Temperatura minima: x°</li>\n                    <li>Pressão: x° hpa</li>\n                    <li>Umidade: x%</li>\n                </ul>\n            </Fragment>\n        );\n    }\n    \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}