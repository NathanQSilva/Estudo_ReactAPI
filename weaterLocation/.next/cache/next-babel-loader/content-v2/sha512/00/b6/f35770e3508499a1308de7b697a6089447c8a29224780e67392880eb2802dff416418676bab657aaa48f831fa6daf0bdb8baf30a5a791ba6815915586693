{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nathan-silva/Documentos/Repositorios/Estudo_ReactAPI/weather-location/src/pages/_app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  _s();\n\n  var _useState = useState(false),\n      location = _useState[0],\n      setLocation = _useState[1];\n\n  var _useState2 = useState(false),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var getWeather = async(lat, long);\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude, position.coords.longitude);\n      setLocation(true);\n    });\n  }, []);\n\n  if (location == false) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Voc\\xEA precisa habilitar a localiza\\xE7\\xE3o no browser o/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cliema nas suas coordenadas (Exemplo)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Temperatura atual: x\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Temperatura maxima: x\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Temperatura minima: x\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Press\\xE3o: x\\xB0 hpa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Umidade: x%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(App, \"3Yy4Em+h5dvlfVXQVM3wytPcOZ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nathan-silva/Documentos/Repositorios/Estudo_ReactAPI/weather-location/src/pages/_app.jsx"],"names":["React","Fragment","useState","useEffect","axios","App","location","setLocation","weather","setWeather","getWeather","async","lat","long","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAgB;AAAA;;AAAA,kBAEoBH,QAAQ,CAAC,KAAD,CAF5B;AAAA,MAELI,QAFK;AAAA,MAEKC,WAFL;;AAAA,mBAGkBL,QAAQ,CAAC,KAAD,CAH1B;AAAA,MAGLM,OAHK;AAAA,MAGIC,UAHJ;;AAKZ,MAAIC,UAAU,GAAGC,KAAK,CAAEC,GAAF,EAAOC,IAAP,CAAtB;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAAT,CAAgBC,QAA5B,EAAsCJ,QAAQ,CAACG,MAAT,CAAgBE,SAAtD;AACAf,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,QAAQ,IAAI,KAAhB,EAAwB;AACpB,wBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIE,GALN,MAMK;AACD,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;AAEJ;;GApCQD,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App () {\n\n    const [location, setLocation] = useState(false);\n    const [weather, setWeather] = useState(false);\n\n    let getWeather = async (lat, long)\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            console.log(position.coords.latitude, position.coords.longitude);\n            setLocation(true)\n        })\n    }, [])\n\n    if (location == false ) {\n        return (\n            <Fragment>\n                Você precisa habilitar a localização no browser o/\n            </Fragment>\n        )}\n    else {\n        return (\n            <Fragment>\n                <h3>Cliema nas suas coordenadas (Exemplo)</h3>\n                <hr/>\n                <ul>\n                    <li>Temperatura atual: x°</li>\n                    <li>Temperatura maxima: x°</li>\n                    <li>Temperatura minima: x°</li>\n                    <li>Pressão: x° hpa</li>\n                    <li>Umidade: x%</li>\n                </ul>\n            </Fragment>\n        );\n    }\n    \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}